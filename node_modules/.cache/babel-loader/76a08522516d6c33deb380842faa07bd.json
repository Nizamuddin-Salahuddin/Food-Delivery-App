{"ast":null,"code":"var _jsxFileName = \"E:\\\\Practice\\\\practice\\\\src\\\\component\\\\Practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Practice.css\";\nimport { Table } from \"reactstrap\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Practice() {\n  _s();\n\n  const [value, setValue] = useState([]);\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then(res => {\n      const data = res.data;\n      setValue(data);\n    });\n  }, [value]);\n\n  const HandleDataFetch = () => {\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: HandleDataFetch,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"User Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: value.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.address.street\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: value.phone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Practice, \"e72brSvN7a1wkOwlAJ9253jofkE=\");\n\n_c = Practice;\nexport default Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useEffect","useState","axios","Table","Practice","value","setValue","get","then","res","data","HandleDataFetch","console","log","map","index","id","name","email","address","street","phone"],"sources":["E:/Practice/practice/src/component/Practice.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Practice.css\";\r\nimport { Table } from \"reactstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nfunction Practice() {\r\n  const [value, setValue] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://jsonplaceholder.typicode.com/users`).then((res) => {\r\n      const data = res.data;\r\n      setValue(data);\r\n    });\r\n  }, [value]);\r\n\r\n  const HandleDataFetch = () => {\r\n    console.log(value);\r\n  };\r\n  return (\r\n    <div className=\"Wrapper\">\r\n      <button type=\"button\" onClick={HandleDataFetch}>\r\n        Click Me\r\n      </button>\r\n      <div>\r\n        <Table>\r\n          <thead>\r\n            <tr>\r\n              <th>User Id</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Address</th>\r\n              <th>Contact</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {value.map((value, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{value.id}</td>\r\n                  <td>{value.name}</td>\r\n                  <td>{value.email}</td>\r\n                  <td>{value.address.street}</td>\r\n                  <td>{value.phone}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Practice;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAASC,KAAT,QAAsB,YAAtB;AACA,OAAO,kCAAP;;;AACA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACdE,KAAK,CAACK,GAAN,CAAW,4CAAX,EAAwDC,IAAxD,CAA8DC,GAAD,IAAS;MACpE,MAAMC,IAAI,GAAGD,GAAG,CAACC,IAAjB;MACAJ,QAAQ,CAACI,IAAD,CAAR;IACD,CAHD;EAID,CALQ,EAKN,CAACL,KAAD,CALM,CAAT;;EAOA,MAAMM,eAAe,GAAG,MAAM;IAC5BC,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACD,CAFD;;EAGA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAEM,eAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAA,uBACE,QAAC,KAAD;QAAA,wBACE;UAAA,uBACE;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAFF,eAGE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAHF,eAIE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAJF,eAKE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QALF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAUE;UAAA,UACGN,KAAK,CAACS,GAAN,CAAU,CAACT,KAAD,EAAQU,KAAR,KAAkB;YAC3B,oBACE;cAAA,wBACE;gBAAA,UAAKV,KAAK,CAACW;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QADF,eAEE;gBAAA,UAAKX,KAAK,CAACY;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QAFF,eAGE;gBAAA,UAAKZ,KAAK,CAACa;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QAHF,eAIE;gBAAA,UAAKb,KAAK,CAACc,OAAN,CAAcC;cAAnB;gBAAA;gBAAA;gBAAA;cAAA,QAJF,eAKE;gBAAA,UAAKf,KAAK,CAACgB;cAAX;gBAAA;gBAAA;gBAAA;cAAA,QALF;YAAA,GAASN,KAAT;cAAA;cAAA;cAAA;YAAA,QADF;UASD,CAVA;QADH;UAAA;UAAA;UAAA;QAAA,QAVF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiCD;;GA9CQX,Q;;KAAAA,Q;AAgDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}