{"ast":null,"code":"var _jsxFileName = \"E:\\\\Practice\\\\practice\\\\src\\\\component\\\\Practice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Practice.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Practice() {\n  _s();\n\n  const [value, setValue] = useState([]);\n  useEffect(() => {\n    axios.get(`https://jsonplaceholder.typicode.com/posts`).then(res => {\n      const data = res.data;\n      setValue(data);\n    });\n  }, [value]);\n\n  const HandleDataFetch = () => {\n    console.log(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: HandleDataFetch,\n      children: \"Click Me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: value.map((value, index) => {\n        /*#__PURE__*/\n        _jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value.name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Practice, \"O2kihztIKOy9zHJosZVFQqCmMo8=\");\n\n_c = Practice;\nexport default Practice;\n\nvar _c;\n\n$RefreshReg$(_c, \"Practice\");","map":{"version":3,"names":["React","useEffect","useState","axios","Practice","value","setValue","get","then","res","data","HandleDataFetch","console","log","map","index","name"],"sources":["E:/Practice/practice/src/component/Practice.js"],"sourcesContent":["import React,{useEffect, useState} from 'react'\r\nimport axios from 'axios';\r\nimport './Practice.css';\r\n\r\nfunction Practice() {\r\n\r\nconst[value,setValue]=useState([]);\r\n\r\nuseEffect(()=>{\r\n    axios.get( `https://jsonplaceholder.typicode.com/posts`)\r\n    .then(res=>{\r\n        const data=res.data\r\n        setValue(data)\r\n    })\r\n},[value]);\r\n\r\nconst HandleDataFetch=()=>{\r\n    console.log(value)\r\n}\r\nreturn (\r\n    <div className='Wrapper'>\r\n        <button type='button' onClick={HandleDataFetch}>Click Me</button>\r\n      <div>\r\n       {value.map((value,index)=>{\r\n        <table>\r\n            <tr key={index}>\r\n                <td key={index}>{value.name}</td>\r\n            </tr>\r\n        </table>\r\n       })}\r\n      </div>\r\n       </div>\r\n  )\r\n}\r\n\r\nexport default Practice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAEpB,MAAK,CAACC,KAAD,EAAOC,QAAP,IAAiBJ,QAAQ,CAAC,EAAD,CAA9B;EAEAD,SAAS,CAAC,MAAI;IACVE,KAAK,CAACI,GAAN,CAAY,4CAAZ,EACCC,IADD,CACMC,GAAG,IAAE;MACP,MAAMC,IAAI,GAACD,GAAG,CAACC,IAAf;MACAJ,QAAQ,CAACI,IAAD,CAAR;IACH,CAJD;EAKH,CANQ,EAMP,CAACL,KAAD,CANO,CAAT;;EAQA,MAAMM,eAAe,GAAC,MAAI;IACtBC,OAAO,CAACC,GAAR,CAAYR,KAAZ;EACH,CAFD;;EAGA,oBACI;IAAK,SAAS,EAAC,SAAf;IAAA,wBACI;MAAQ,IAAI,EAAC,QAAb;MAAsB,OAAO,EAAEM,eAA/B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEE;MAAA,UACEN,KAAK,CAACS,GAAN,CAAU,CAACT,KAAD,EAAOU,KAAP,KAAe;QACzB;QAAA;UAAA,uBACI;YAAA,uBACI;cAAA,UAAiBV,KAAK,CAACW;YAAvB,GAASD,KAAT;cAAA;cAAA;cAAA;YAAA;UADJ,GAASA,KAAT;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MAKA,CANA;IADF;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcC;;GA7BQX,Q;;KAAAA,Q;AA+BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}